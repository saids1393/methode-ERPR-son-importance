"use client";
import React, { useState } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const chapterPage6AudioMappings: { [key: string]: string } = {
  'ŸÅŸä': 'chap1_pg6_case1',
  'ŸÖŸÜ': 'chap1_pg6_case2',
  'ŸÇ': 'chap1_pg6_case3',
  'ŸÇÿØ': 'chap1_pg6_case4',
  'ŸÑ': 'chap1_pg6_case5',
  'ŸáŸà': 'chap1_pg6_case6',
  'ŸÖÿß': 'chap1_pg6_case7',
  'ÿ£ŸÜ': 'chap1_pg6_case8',
  'ŸÑŸÖ': 'chap1_pg6_case9',
  'ŸÉŸÑ': 'chap1_pg6_case10',
  'ÿ´ŸÖ': 'chap1_pg6_case11',
  'ŸáŸÑ': 'chap1_pg6_case12',
  'ÿπŸÜ': 'chap1_pg6_case13',
  'ÿ±': 'chap1_pg6_case14',
  'ÿ®Ÿá': 'chap1_pg6_case15',
  'ŸÑŸá': 'chap1_pg6_case16',
  'ÿ±ÿ®': 'chap1_pg6_case17',
  'ŸÇŸÑ': 'chap1_pg6_case18',
  'ŸáŸÖ': 'chap1_pg6_case19',
  'ŸÜÿß': 'chap1_pg6_case20',
  'ŸÉŸÖ': 'chap1_pg6_case21',
  'ÿ£Ÿä': 'chap1_pg6_case22',
  'ŸÅ': 'chap1_pg6_case23',
  'ŸÜŸàÿ±': 'chap1_pg6_case24',
  'ÿπÿ®ÿØ': 'chap1_pg6_case25',
  'ŸÜÿßÿ±': 'chap1_pg6_case26',
  'ŸäÿØÿπ': 'chap1_pg6_case27',
  'ÿπ': 'chap1_pg6_case29',
  'ŸÖŸÑŸÉ': 'chap1_pg6_case30',
  'ŸÜŸáÿ±': 'chap1_pg6_case31',
  'ŸÇŸÖÿ±': 'chap1_pg6_case32',
  'ÿ∫Ÿäÿ®': 'chap1_pg6_case33',
  'ÿ±ÿ≥ŸÑ': 'chap1_pg6_case34',
  'ŸÜŸÅÿ≥': 'chap1_pg6_case35',
  'ÿµŸÖÿ™': 'chap1_pg6_case37',
  'ÿ≠': 'chap1_pg6_case38',
  'ÿÆŸäÿ±': 'chap1_pg6_case39',
  'ÿπŸÑŸÖ': 'chap1_pg6_case40',
  'ŸÇŸÑÿ®': 'chap1_pg6_case41',
  'ÿ∫ŸÅÿ±': 'chap1_pg6_case43',
  'ÿ≥ÿ¨ÿØ': 'chap1_pg6_case44',
  'ÿπÿØÿ©': 'chap1_pg6_case45',
  'ÿÆŸàŸÅ': 'chap1_pg6_case46',
  'ÿµÿØŸÇ': 'chap1_pg6_case47',
  'ŸÉŸÅÿ±': 'chap1_pg6_case48',
  'ŸÜÿµÿ±': 'chap1_pg6_case49',
  'ÿ≥': 'chap1_pg6_case50',
  'ÿ≥ÿ§ŸÑ': 'chap1_pg6_case51',
  'ÿ£ŸÖÿ±': 'chap1_pg6_case52',
  'Ÿäÿ¶ÿ≥': 'chap1_pg6_case53',
};

// Couleurs pour chaque lettre dans un mot
const letterColors = [
  'text-red-400',    // Premi√®re lettre
  'text-green-400',  // Deuxi√®me lettre
  'text-blue-400',   // Troisi√®me lettre
  'text-yellow-400', // Quatri√®me lettre
  'text-purple-400', // Cinqui√®me lettre (au cas o√π)
  'text-orange-400', // Sixi√®me lettre (au cas o√π)
];

const Cell = ({ word, onClick }: {
  word: string;
  onClick?: () => void;
}) => (
  <div
    className="border border-zinc-500 rounded-xl p-4 text-center min-h-[100px] flex flex-col justify-center items-center hover:bg-zinc-700 transition-all duration-300 hover:scale-105 cursor-pointer"
    onClick={onClick}
  >
    <div className="text-3xl md:text-4xl font-bold text-white">
      {word}
    </div>
  </div>
);

const IntroductionPage = () => {
  return (
    <div className="p-8 bg-gray-900">
      <div className="w-full bg-gray-800 rounded-lg p-8">
        <div className="text-white space-y-6 text-xl leading-relaxed">

          <p>
            <span className="text-purple-400 font-semibold">Exercice pratique ! </span>
            Maintenant que tu as appris les diff√©rentes formes des lettres arabes,
            c'est le moment de tester ta reconnaissance visuelle.
          </p>

          <p>
            Dans cet exercice, tu vas retrouver des <span className="text-yellow-400 font-semibold">lettres isol√©es </span>
            et des <span className="text-yellow-400 font-semibold">lettres attach√©es</span> qui utilisent toutes les formes
            que tu as √©tudi√©es : d√©but, milieu et fin de mot.
          </p>

          <p>
            üéØ <span className="font-semibold">Objectif de l'exercice :</span>
            <br />
            ‚Ä¢ Reconna√Ætre les lettres dans leurs diff√©rentes positions
            <br />
            ‚Ä¢ Identifier les lettres isol√©es et leurs formes attach√©es
            <br />
            ‚Ä¢ T'entra√Æner √† reconnaitre les lettres sans erreurs
          </p>

          <p>
            <span className="text-green-400 font-semibold">Comment √ßa marche :</span>
            <br />
            ‚Ä¢ Observe bien chaque lettre et sa position
            <br />
            ‚Ä¢ Essaye de deviner la lettre ou les lettres dans chaque case
            <br />
            ‚Ä¢ Clique sur chaque mot pour entendre sa prononciation
          </p>

          <div className="bg-blue-900/30 border border-blue-500/50 rounded-lg p-6 my-6">
            <p>
              üí° <span className="font-semibold">Astuce :</span>
              Dans chaque mot, <span className="text-red-400">chaque lettre a une couleur diff√©rente</span> pour t'aider
              √† mieux les distinguer visuellement !
            </p>
          </div>

          <p>
            √Ä la page suivante, tu trouveras la grille d'exercice avec tous les mots.
            Prends ton temps et amuse-toi √† d√©couvrir la beaut√© de l'√©criture arabe !
          </p>
        </div>
      </div>

      <footer className="border-t-1 text-white text-center p-6 mt-8 flex-shrink-0 font-semibold text-lg">
        <div>Exercice de Reconnaissance</div>
        <div className="mt-1">¬© 2025 Tous droits r√©serv√©s</div>
      </footer>
    </div>
  );
};

const ExercisePage = ({ playWordAudio }: { playWordAudio: (word: string) => void }) => {
  const words = [
    'ŸÅŸä', 'ŸÖŸÜ', 'ŸÇ', 'ŸÇÿØ', 'ŸÑ', 'ŸáŸà',
    'ŸÖÿß', 'ÿ£ŸÜ', 'ŸÑŸÖ', 'ŸÉŸÑ', 'ÿ´ŸÖ', 'ŸáŸÑ',
    'ÿπŸÜ', 'ÿ±', 'ÿ®Ÿá', 'ŸÑŸá', 'ÿ±ÿ®', 'ŸÇŸÑ',
    'ŸáŸÖ', 'ŸÜÿß', 'ŸÉŸÖ', 'ÿ£Ÿä', 'ŸÅ', 'ŸÜŸàÿ±',
    'ÿπÿ®ÿØ', 'ŸÜÿßÿ±', 'ŸäÿØÿπ', 'ÿπ', 'ŸÖŸÑŸÉ',
    'ŸÜŸáÿ±', 'ŸÇŸÖÿ±', 'ÿ∫Ÿäÿ®', 'ÿ±ÿ≥ŸÑ', 'ŸÜŸÅÿ≥',
    'ÿµŸÖÿ™', 'ÿ≠', 'ÿÆŸäÿ±', 'ÿπŸÑŸÖ', 'ŸÇŸÑb',
    'ÿ∫ŸÅÿ±', 'ÿ≥ÿ¨ÿØ', 'ÿπÿØÿ©', 'ÿÆŸàŸÅ', 'ÿµÿØŸÇ', 'ŸÉŸÅÿ±',
    'ŸÜÿµÿ±', 'ÿ≥', 'ÿ≥ÿ§ŸÑ', 'ÿ£ŸÖÿ±', 'Ÿäÿ¶ÿ≥',
  ];

  // Fonction pour colorer chaque lettre individuellement
  const renderColoredWord = (word: string) => {
    return word.split('').map((letter, index) => (
      <span
        key={index}
        className={letterColors[index] || 'text-white'}
      >
        {letter}
      </span>
    ));
  };

  return (
    <div className="p-8 bg-gray-900">
      <div className="grid grid-cols-4 md:grid-cols-6 lg:grid-cols-7 gap-4 mb-6" dir="rtl">
        {words.map((word, index) => (
          <div
            key={index}
            className="border border-zinc-500 rounded-xl p-4 text-center min-h-[100px] flex flex-col justify-center items-center hover:bg-zinc-700 transition-all duration-300 hover:scale-105 cursor-pointer"
            onClick={() => playWordAudio(word)}
          >
            <div className="text-3xl md:text-4xl font-bold transition-colors">
              {renderColoredWord(word)}
            </div>
          </div>
        ))}
      </div>

      {/* L√©gende pour les couleurs des lettres */}
      <div className="bg-gray-800 rounded-lg p-4 mb-4">
        <div className="flex flex-wrap items-center justify-center gap-4 text-sm">
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 bg-red-400 rounded-full"></div>
            <span className="text-red-400">Premi√®re lettre</span>
          </div>
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 bg-green-400 rounded-full"></div>
            <span className="text-green-400">Deuxi√®me lettre</span>
          </div>
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 bg-blue-400 rounded-full"></div>
            <span className="text-blue-400">Troisi√®me lettre</span>
          </div>
        </div>
      </div>

      {/* Instructions de l'exercice */}
      <div className="bg-purple-900/30 border border-purple-500/50 rounded-lg p-6 mb-6">
        <p className="text-lg leading-relaxed text-white text-center">
          <span className="font-semibold">üéØ Instructions :</span> Clique sur chaque mot pour √©couter sa prononciation.
          <span className="block mt-2">Chaque lettre a une couleur diff√©rente pour t'aider √† mieux les distinguer !</span>
        </p>
      </div>

      <footer className="border-t-1 text-white text-center p-6 flex-shrink-0 font-semibold text-sm">
        <div>Exercice de Reconnaissance</div>
        <div className="mt-1">¬© 2025 Tous droits r√©serv√©s</div>
      </footer>
    </div>
  );
};

const Page6 = () => {
  const [currentPage, setCurrentPage] = useState(0);
  const totalPages = 2;

  const playWordAudio = (word: string) => {
    const audioFileName = chapterPage6AudioMappings[word];
    if (audioFileName) {
      const audio = new Audio(`/audio/chapitre0_1/${audioFileName}.mp3`);
      audio.play().catch(error => {
        console.error('Erreur lors de la lecture audio:', error);
      });
    }
  };

  const goToNextPage = () => {
    if (currentPage < totalPages - 1) {
      setCurrentPage(currentPage + 1);
    }
  };

  const goToPreviousPage = () => {
    if (currentPage > 0) {
      setCurrentPage(currentPage - 1);
    }
  };

  const pageTitle = currentPage === 0
    ? "Exercice : Reconnaissance des lettres sous toutes leurs formes"
    : "Exercice : Grille de reconnaissance";

  return (
    <div className="font-arabic min-h-screen bg-gray-900">
      <div className="w-full h-full overflow-hidden bg-gray-900">

        {/* Header */}
        <div className="text-white p-6 text-center border-b-2">
          <div className="text-3xl font-bold mb-2">
            {pageTitle}
          </div>
          {/* Phrase ajout√©e seulement pour la page d'exercice */}
          {currentPage === 1 && (
            <div className="text-lg text-amber-300">
              Cliquez pour √©couter chaque lettre et r√©p√©tez apr√®s.
            </div>
          )}
        </div>

        {/* Navigation Buttons */}
        <div className="flex justify-between items-center px-4 md:px-8 py-4">
          <button
            onClick={goToPreviousPage}
            disabled={currentPage === 0}
            className={`w-10 h-10 md:w-12 md:h-12 rounded-full border-2 flex items-center justify-center transition-all ${currentPage === 0
                ? 'border-gray-600 text-gray-600 cursor-not-allowed'
                : 'border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white hover:scale-110'
              }`}
          >
            <ChevronLeft size={20} className="md:w-6 md:h-6" />
          </button>

          <div className="text-white font-semibold text-sm md:text-base">
            Page {currentPage + 1} / {totalPages}
          </div>

          <button
            onClick={goToNextPage}
            disabled={currentPage === totalPages - 1}
            className={`w-10 h-10 md:w-12 md:h-12 rounded-full border-2 flex items-center justify-center transition-all ${currentPage === totalPages - 1
                ? 'border-gray-600 text-gray-600 cursor-not-allowed'
                : 'border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white hover:scale-110'
              }`}
          >
            <ChevronRight size={20} className="md:w-6 md:h-6" />
          </button>
        </div>

        {/* Content */}
        {currentPage === 0 && <IntroductionPage />}
        {currentPage === 1 && <ExercisePage playWordAudio={playWordAudio} />}
      </div>
    </div>
  );
};

export default Page6;